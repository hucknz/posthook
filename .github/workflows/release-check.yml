name: Check for new Postfix release

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version number from Debian repository
        id: get_current_version
        run: |
          RELEASE_VERSION=$(curl -sL "http://ftp.debian.org/debian/pool/main/p/postfix/")
          CURRENT_VERSION=$(echo "$RELEASE_VERSION" | grep -oP 'postfix_\K[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -1)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Get previous version
        id: get_previous_version
        run: |
          PREVIOUS_VERSION=$(grep "postfix_version" .version | cut -d'=' -f2)
          echo "PREVIOUS_VERSION=$PREVIOUS_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare_versions
        run: |
          if [ -z "${{ env.CURRENT_VERSION }}" ] || [ "${{ env.CURRENT_VERSION }}" = "null" ]; then
            echo "No valid new version found. Skipping update."
            echo "MODIFIED=false" >> $GITHUB_ENV
          elif [ -n "${{ env.PREVIOUS_VERSION }}" ]; then
            if [ "${{ env.PREVIOUS_VERSION }}" = "${{ env.CURRENT_VERSION }}" ]; then
              echo "Versions match. No change detected."
              echo "MODIFIED=false" >> $GITHUB_ENV
            else
              echo "Versions differ. There has been a new release."
              sed -i "s/^postfix_version=.*/postfix_version=${{ env.CURRENT_VERSION }}/" .version
              curl -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                https://api.github.com/repos/hucknz/posthook/actions/workflows/container-build-push.yml/dispatches \
                -d '{"ref":"main"}'
              echo "MODIFIED=true" >> $GITHUB_ENV
            fi
          else
            echo "Previous version not found. This is likely the first run."
            sed -i "s/^postfix_version=.*/postfix_version=${{ env.CURRENT_VERSION }}/" .version
            echo "MODIFIED=true" >> $GITHUB_ENV
          fi

      - name: Commit latest version
        id: commit_latest_version
        if: env.MODIFIED == 'true'
        run: |
          git config --global user.name 'hucknz'
          git config --global user.email '12265772+hucknz@users.noreply.github.com'
          git commit -am "New baseimage hash found"
          git push

      - name: Notify new version found
        id: notify_new_version
        if: env.MODIFIED == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: ${{ github.workflow}} ${{ job.status }}
          description: "A new Postfix version was found. The build and push workflow has been triggered."
    
      - name: Notify failure
        id: notify_failure
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: "Postfix release check ${{ job.status }}"